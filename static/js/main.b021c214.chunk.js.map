{"version":3,"sources":["components/Navbar.tsx","App.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["Navbar","linkClass","isActive","classNames","className","role","to","App","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","PeopleFilters","sex","type","placeholder","href","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","useState","people","setPeople","personSlug","useParams","isLoading","setIsLoading","isLoadingError","setIsLoadingError","isSelected","setIsSelected","copy","setCopy","sort","get","order","useEffect","getPeople","catch","finally","isAnchorHere","anchorName","find","person","name","getSortElementComparison","firstWord","secondWord","localeCompare","sortByName","sortBy","length","list","first","second","born","died","reverse","sortByTrigger","map","slug","onClick","motherName","fatherName","PeoplePage","Root","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b021c214.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const linkClass = (\n    { isActive }: { isActive: boolean },\n  ) => classNames('navbar-item', { 'has-background-grey-lighter': isActive });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={linkClass} to=\"/\">Home</NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={linkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          {/* <h1 className=\"title\">Home Page</h1>\n          <h1 className=\"title\">Page not found</h1> */}\n          {/* <PeoplePage /> */}\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","/* eslint-disable */\n// import { SearchParams } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n// import { useSearchParams } from 'react-router-dom';\n\nexport const PeopleFilters = () => {\n  // const [searchParams] = useSearchParams();\n\n  function addFilters() {\n    return { sex: 'm' };\n  }\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink className=\"is-active\" params={{ sex: 'none' }}>All</SearchLink>\n        <SearchLink className=\"\" params={addFilters() as any}>Male</SearchLink>\n        <SearchLink className=\"\" params={{ sex: 'f' }}>Female</SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1\"\n              href=\"#/people?centuries=16\"\n            >\n              16\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=17\"\n            >\n              17\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=18\"\n            >\n              18\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1 is-info\"\n              href=\"#/people?centuries=19\"\n            >\n              19\n            </a>\n\n            <a\n              data-cy=\"century\"\n              className=\"button mr-1\"\n              href=\"#/people?centuries=20\"\n            >\n              20\n            </a>\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <a\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              href=\"#/people\"\n            >\n              All\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import {\n  Link,\n  useParams,\n  useSearchParams,\n} from 'react-router-dom';\nimport {\n  // useCallback,\n  useEffect,\n  // useMemo,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { Loader } from './Loader';\nimport { SearchLink } from './SearchLink';\nimport { SearchParams } from '../utils/searchHelper';\n\n// export enum SortType {\n//   NONE,\n//   ALPHABET,\n// }\n\nexport const PeopleTable: React.FC = () => {\n  const [people, setPeople] = useState([] as Person[]);\n  const { personSlug } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n  const [isSelected, setIsSelected] = useState(false);\n  const [copy, setCopy] = useState(people);\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n  const sex = searchParams.get('sex');\n  // const all = searchParams.toString().length;\n  // const [count, setCount] = useState(0)\n\n  // useCallback(() => {\n  //   setCount(prevState => prevState + 1);\n  // }, [all]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(response => {\n        setPeople(response);\n        setCopy([...response]);\n      })\n      .catch(() => setIsLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isAnchorHere = (anchorName: string | null): Person | undefined => {\n    if (anchorName) {\n      return people.find(person => person.name === anchorName);\n    }\n\n    return undefined;\n  };\n\n  function getSortElementComparison(firstWord: string, secondWord: string) {\n    return firstWord.localeCompare(secondWord);\n  }\n\n  function sortByTrigger() {\n    let list = [] as Person[];\n\n    if (sort === 'name') {\n      list = people.sort(\n        (first, second) => getSortElementComparison(first.name, second.name),\n      );\n    }\n\n    if (sort === 'sex') {\n      list = people.sort(\n        (first, second) => getSortElementComparison(first.sex, second.sex),\n      );\n    }\n\n    if (sort === 'born') {\n      list = people.sort(\n        (first, second) => (first.born > second.born ? 1 : -1),\n      );\n    }\n\n    if (sort === 'died') {\n      list = people.sort(\n        (first, second) => (first.died > second.died ? 1 : -1),\n      );\n    }\n\n    if (sex) {\n      list = people.sort(\n        (first, second) => getSortElementComparison(second.sex, first.sex),\n      );\n    }\n\n    if (sort && !order) {\n      return list;\n    }\n\n    if (order) {\n      return list.reverse();\n    }\n\n    return copy;\n  }\n\n  function sortByName(sortBy: string) {\n    if (sort && !order) {\n      return { sort: sortBy, order: 'desc' };\n    }\n\n    if (order) {\n      return { sort: null, order: null };\n    }\n\n    return { sort: sortBy };\n  }\n\n  return (\n    <>\n      {/* <h1 className=\"title\">People Page</h1> */}\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"block\">\n          {/* <div className=\"box table-container\"> */}\n          {isLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n          {(people.length === 0 && !isLoadingError) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            {(people.length > 0) && (\n              <thead>\n                <tr>\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Name\n                      <SearchLink\n                        params={sortByName('name') as SearchParams}\n                      >\n                        <span className=\"icon\">\n                          <i className=\"fas fa-sort\" />\n                        </span>\n                      </SearchLink>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Sex\n                      <SearchLink\n                        params={sortByName('sex') as SearchParams}\n                      >\n                        <span className=\"icon\">\n                          <i className=\"fas fa-sort\" />\n                        </span>\n                      </SearchLink>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Born\n                      <SearchLink\n                        params={sortByName('born') as SearchParams}\n                      >\n                        <span className=\"icon\">\n                          <i className=\"fas fa-sort\" />\n                        </span>\n                      </SearchLink>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Died\n                      <SearchLink\n                        params={sortByName('died') as SearchParams}\n                      >\n                        <span className=\"icon\">\n                          <i className=\"fas fa-sort\" />\n                        </span>\n                      </SearchLink>\n                    </span>\n                  </th>\n\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n            )}\n            <tbody>\n              {sortByTrigger().map((person) => {\n                return (\n                  <tr\n                    data-cy=\"person\"\n                    key={person.slug}\n                    className={classNames({\n                      'has-background-warning':\n                        isSelected && person.slug === personSlug,\n                    })}\n                  >\n                    <td>\n                      <Link\n                        to={`/people/${person.slug}`}\n                        className={classNames({\n                          'has-text-danger': person.sex === 'f',\n                        })}\n                        onClick={() => setIsSelected(true)}\n                      >\n                        {person.name}\n                      </Link>\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n\n                    <td>\n                      {isAnchorHere(person.motherName) ? (\n                        <Link\n                          to={`/people/${isAnchorHere(person.motherName)?.slug}`}\n                          className=\"has-text-danger\"\n                          onClick={() => setIsSelected(false)}\n                        >\n                          {isAnchorHere(person.motherName)?.name}\n                        </Link>\n                      ) : (\n                        <>\n                          {person.motherName}\n                        </>\n                      )}\n                    </td>\n                    <td>\n                      {isAnchorHere(person.fatherName) ? (\n                        <Link\n                          to={`/people/${isAnchorHere(person.fatherName)?.slug}`}\n                          className={classNames({\n                            'has-text-danger': person.sex === 'f',\n                          })}\n                        >\n                          {isAnchorHere(person.fatherName)?.name}\n                        </Link>\n                      ) : (\n                        <>\n                          {person.fatherName}\n                        </>\n                      )}\n                    </td>\n                  </tr>\n                );\n              })}\n\n            </tbody>\n          </table>\n          {/* </div> */}\n        </div>\n\n      )}\n    </>\n  );\n};\n","import { PeopleFilters } from './PeopleFilters';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {/* <Loader /> */}\n\n              {/* <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p> */}\n\n              {/* <p>There are no people matching the current search criteria</p> */}\n\n              <PeopleTable />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\n// import { PeopleTable } from './components/PeopleTable';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<h1 className=\"title\">Home Page</h1>} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n        <Route\n          path=\"*\"\n          element={<p className=\"title\">Page not found</p>}\n        />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}